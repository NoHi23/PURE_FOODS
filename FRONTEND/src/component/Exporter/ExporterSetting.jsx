import React, { useState } from "react";
import axios from "axios";
import { toast } from "react-toastify";
import Swal from "sweetalert2";

const ExporterSetting = () => {
  const [disableReason, setDisableReason] = useState("");
  const [deleteReason, setDeleteReason] = useState("");

  const userData = JSON.parse(localStorage.getItem("user"));
  const userId = userData?.userID;

  const handleDisableAccount = async () => {
    if (!userId) {
      toast.error("Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng.");
      return;
    }

    if (!disableReason) {
      toast.warn("H√£y ch·ªçn l√Ω do b·∫°n mu·ªën v√¥ hi·ªáu ho√° t√†i kho·∫£n nh√© üò¢");
      return;
    }

    const result = await Swal.fire({
      title: "X√°c nh·∫≠n v√¥ hi·ªáu ho√° t√†i kho·∫£n",
      text: "T√†i kho·∫£n c·ªßa b·∫°n s·∫Ω b·ªã t·∫°m d·ª´ng. B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p l·∫°i b·∫•t c·ª© l√∫c n√†o ƒë·ªÉ k√≠ch ho·∫°t l·∫°i.",
      icon: "question",
      showCancelButton: true,
      confirmButtonColor: "#ffc107",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "V√¥ hi·ªáu ho√°",
      cancelButtonText: "Hu·ª∑ thao t√°c",
    });

    if (!result.isConfirmed) return;

    try {
      const response = await axios.put("http://localhost:8082/PureFoods/api/users/profile/update", { 
        userId, 
        status: 1 
      });
      if (response.data?.status === 200) {
        toast.success("T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c v√¥ hi·ªáu ho√°. B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p l·∫°i b·∫•t c·ª© l√∫c n√†o ƒë·ªÉ k√≠ch ho·∫°t.");
        localStorage.removeItem("user");
        window.location.href = "/login";
      } else {
        toast.error("V√¥ hi·ªáu ho√° t√†i kho·∫£n th·∫•t b·∫°i: " + (response.data.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh"));
      }
    } catch (err) {
      toast.error("L·ªói khi v√¥ hi·ªáu ho√° t√†i kho·∫£n: " + (err.response?.data?.message || err.message));
    }
  };

  const handleDeleteAccount = async () => {
    if (!userId) {
      toast.error("Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng.");
      return;
    }

    if (!deleteReason) {
      toast.warn("H√£y ch·ªçn l√Ω do b·∫°n mu·ªën xo√° t√†i kho·∫£n üò¢");
      return;
    }

    const result = await Swal.fire({
      title: "X√°c nh·∫≠n xo√° t√†i kho·∫£n",
      text: "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° t√†i kho·∫£n? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c.",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Xo√° ngay",
      cancelButtonText: "Hu·ª∑ thao t√°c",
    });

    if (!result.isConfirmed) return;

    try {
      const response = await axios.delete("http://localhost:8082/PureFoods/api/users/profile/delete", { 
        data: { userId } 
      });
      if (response.data?.status === 200) {
        toast.success("T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c xo√°. Vui l√≤ng li√™n h·ªá admin n·∫øu b·∫°n mu·ªën kh√¥i ph·ª•c l·∫°i.");
        localStorage.removeItem("user");
        window.location.href = "/login";
      } else {
        toast.error("Xo√° t√†i kho·∫£n th·∫•t b·∫°i: " + (response.data.message || "L·ªói kh√¥ng x√°c ƒë·ªãnh"));
      }
    } catch (err) {
      toast.error("L·ªói khi xo√° t√†i kho·∫£n: " + (err.response?.data?.message || err.message));
    }
  };

  return (
    <div className="dashboard-privacy">
      <div className="title">
        <h2>C√†i ƒë·∫∑t</h2>
        <span className="title-leaf">
          <svg className="icon-width bg-gray">
            <use href="../assets/svg/leaf.svg#leaf"></use>
          </svg>
        </span>
      </div>

      <div className="dashboard-bg-box">
        <div className="dashboard-title mb-4">
          <h3>Th√¥ng b√°o</h3>
        </div>
        {[
          "Hi·ªán th√¥ng b√°o l√™n m√†n h√¨nh ch√≠nh",
          "B·∫≠t th√¥ng b√°o",
          "Nh·∫≠n th√¥ng b√°o cho c√°c ho·∫°t ƒë·ªông c·ªßa t√¥i",
          "Kh√¥ng l√†m phi·ªÅn (DND)",
        ].map((label, index) => (
          <div key={index} className="privacy-box">
            <div className="form-check custom-form-check custom-form-check-2 d-flex align-items-center">
              <input
                className="form-check-input"
                type="radio"
                id={`option-${index}`}
                name="desktop"
                defaultChecked={index === 0}
              />
              <label className="form-check-label ms-2" htmlFor={`option-${index}`}>
                {label}
              </label>
            </div>
          </div>
        ))}
        <button className="btn theme-bg-color btn-md fw-bold mt-4 text-white">
          L∆∞u thay ƒë·ªïi
        </button>
      </div>

      <div className="dashboard-bg-box">
        <div className="dashboard-title mb-4">
          <h3>V√¥ hi·ªáu ho√° t√†i kho·∫£n</h3>
        </div>
        {[
          "T√¥i c√≥ m·ªëi lo ng·∫°i v·ªÅ quy·ªÅn ri√™ng t∆∞",
          "ƒê√¢y ch·ªâ l√† t·∫°m th·ªùi",
          "L√Ω do kh√°c",
        ].map((label, index) => (
          <div key={index} className="privacy-box">
            <div className="form-check custom-form-check custom-form-check-2 d-flex align-items-center">
              <input
                className="form-check-input"
                type="radio"
                id={`disable-${index}`}
                name="concern"
                onChange={() => setDisableReason(label)}
              />
              <label className="form-check-label ms-2" htmlFor={`disable-${index}`}>
                {label}
              </label>
            </div>
          </div>
        ))}
        <button
          style={{ backgroundColor: "#FFE57F" }}
          className="btn btn-md fw-bold mt-4 text-black"
          onClick={handleDisableAccount}
        >
          V√¥ hi·ªáu ho√° t√†i kho·∫£n
        </button>
      </div>

      <div className="dashboard-bg-box">
        <div className="dashboard-title mb-4">
          <h3>Xo√° t√†i kho·∫£n</h3>
        </div>
        {[
          "Kh√¥ng c√≤n s·ª≠ d·ª•ng n·ªØa",
          "Mu·ªën chuy·ªÉn sang t√†i kho·∫£n kh√°c",
          "L√Ω do kh√°c",
        ].map((label, index) => (
          <div key={index} className="privacy-box">
            <div className="form-check custom-form-check custom-form-check-2 d-flex align-items-center">
              <input
                className="form-check-input"
                type="radio"
                id={`delete-${index}`}
                name="usable"
                onChange={() => setDeleteReason(label)}
              />
              <label className="form-check-label ms-2" htmlFor={`delete-${index}`}>
                {label}
              </label>
            </div>
          </div>
        ))}
        <button
          style={{ backgroundColor: "red" }}
          className="btn btn-md fw-bold mt-4 text-white"
          onClick={handleDeleteAccount}
        >
          Xo√° t√†i kho·∫£n c·ªßa t√¥i
        </button>
      </div>
    </div>
  );
};

export default ExporterSetting;